/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package itApplictaion;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

//btn.setEnabled(false);
/**
 *
 * @author jawad.saeed
 */
public class ServerUI extends javax.swing.JFrame {

    LoginDB loginDb;
    Connection conn;

    /**
     * Creates new form ServerUI
     */
    public ServerUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        setTitle("HelpDesk");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("help.png")));
        loginDb = new LoginDB("helpdeskdb", "root", "");
        conn = loginDb.getConnection();

        if (requestTable.getSelectedRow() == -1) {
            deleteButton.setEnabled(false);
            emailButton.setEnabled(false);
            stateButton.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        serverTextArea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        sideMenuPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        allPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        allLabel = new javax.swing.JLabel();
        closedPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        closedLabel = new javax.swing.JLabel();
        openPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        openLabel = new javax.swing.JLabel();
        closedPanel1 = new javax.swing.JPanel();
        closedLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        requestIdTextField = new javax.swing.JTextField();
        searchIdButtton = new javax.swing.JButton();
        closedPanel2 = new javax.swing.JPanel();
        closedLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        startDate = new com.toedter.calendar.JDateChooser();
        endDate = new com.toedter.calendar.JDateChooser();
        departmentComboBox = new javax.swing.JComboBox<>();
        searchButtton = new javax.swing.JButton();
        confirmLabel = new javax.swing.JLabel();
        footerLabel = new javax.swing.JLabel();
        footerLabel1 = new javax.swing.JLabel();
        stateButton = new javax.swing.JButton();
        emailButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        serverTextArea.setColumns(20);
        serverTextArea.setRows(5);
        jScrollPane2.setViewportView(serverTextArea);

        jScrollPane1.setBorder(null);

        requestTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "User ID", "Email", "Telephone", "Department", "Priority", "Title", "Description", "Date", "State"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestTable.setGridColor(new java.awt.Color(204, 255, 255));
        requestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(requestTable);

        sideMenuPanel.setBackground(new java.awt.Color(37, 67, 88));
        sideMenuPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 49)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("HelpDesk");

        allPanel.setBackground(new java.awt.Color(17, 45, 50));
        allPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allPanelMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("All Reqeuests");

        allLabel.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        allLabel.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout allPanelLayout = new javax.swing.GroupLayout(allPanel);
        allPanel.setLayout(allPanelLayout);
        allPanelLayout.setHorizontalGroup(
            allPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(allLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        allPanelLayout.setVerticalGroup(
            allPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(allPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        closedPanel.setBackground(new java.awt.Color(17, 45, 50));
        closedPanel.setPreferredSize(new java.awt.Dimension(130, 60));
        closedPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closedPanelMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Closed Requests");

        closedLabel.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        closedLabel.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout closedPanelLayout = new javax.swing.GroupLayout(closedPanel);
        closedPanel.setLayout(closedPanelLayout);
        closedPanelLayout.setHorizontalGroup(
            closedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closedPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        closedPanelLayout.setVerticalGroup(
            closedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closedPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(closedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        openPanel.setBackground(new java.awt.Color(17, 45, 50));
        openPanel.setPreferredSize(new java.awt.Dimension(130, 60));
        openPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openPanelMouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Open Requests");

        openLabel.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        openLabel.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout openPanelLayout = new javax.swing.GroupLayout(openPanel);
        openPanel.setLayout(openPanelLayout);
        openPanelLayout.setHorizontalGroup(
            openPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(openLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        openPanelLayout.setVerticalGroup(
            openPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(openPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        closedPanel1.setBackground(new java.awt.Color(17, 45, 50));
        closedPanel1.setPreferredSize(new java.awt.Dimension(130, 60));

        closedLabel1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        closedLabel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Search by Reqeuest ID:");

        searchIdButtton.setText("Search");
        searchIdButtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIdButttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout closedPanel1Layout = new javax.swing.GroupLayout(closedPanel1);
        closedPanel1.setLayout(closedPanel1Layout);
        closedPanel1Layout.setHorizontalGroup(
            closedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(closedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(closedPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(closedLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, closedPanel1Layout.createSequentialGroup()
                        .addComponent(requestIdTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchIdButtton)))
                .addContainerGap())
        );
        closedPanel1Layout.setVerticalGroup(
            closedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(closedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(closedLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(closedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchIdButtton)
                    .addComponent(requestIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        closedPanel2.setBackground(new java.awt.Color(17, 45, 50));
        closedPanel2.setPreferredSize(new java.awt.Dimension(130, 60));

        closedLabel2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        closedLabel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Search by Information:");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Start Date");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("End Date");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Department");

        departmentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Network Department", "Support Department", "System Department", "Sales Department" }));

        searchButtton.setText("Search");
        searchButtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButttonActionPerformed(evt);
            }
        });

        confirmLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        confirmLabel.setForeground(new java.awt.Color(255, 255, 255));
        confirmLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        confirmLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout closedPanel2Layout = new javax.swing.GroupLayout(closedPanel2);
        closedPanel2.setLayout(closedPanel2Layout);
        closedPanel2Layout.setHorizontalGroup(
            closedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closedPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(closedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(closedPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(86, 86, 86)
                        .addGroup(closedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(departmentComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(closedPanel2Layout.createSequentialGroup()
                                .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(startDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, closedPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(searchButtton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(confirmLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(closedPanel2Layout.createSequentialGroup()
                        .addGroup(closedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(closedPanel2Layout.createSequentialGroup()
                                .addGroup(closedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(213, 213, 213)
                                .addComponent(closedLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(closedPanel2Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel4)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        closedPanel2Layout.setVerticalGroup(
            closedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(closedPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(closedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(closedPanel2Layout.createSequentialGroup()
                        .addGroup(closedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(closedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(departmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(searchButtton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closedLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout sideMenuPanelLayout = new javax.swing.GroupLayout(sideMenuPanel);
        sideMenuPanel.setLayout(sideMenuPanelLayout);
        sideMenuPanelLayout.setHorizontalGroup(
            sideMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(allPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(openPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
            .addComponent(closedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
            .addComponent(closedPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
            .addComponent(closedPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
            .addGroup(sideMenuPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sideMenuPanelLayout.setVerticalGroup(
            sideMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sideMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(allPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closedPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        footerLabel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        footerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        footerLabel.setText("Designed by Jawad Al-Saeed");

        footerLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        footerLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        footerLabel1.setText("Copyright 2019, HelpDeskProject");

        stateButton.setText("Close/Open");
        stateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateButtonActionPerformed(evt);
            }
        });

        emailButton.setText("Email user");
        emailButton.setActionCommand("");
        emailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.setActionCommand("");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(sideMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(footerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 691, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(footerLabel1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(emailButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(stateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(footerLabel)
                    .addComponent(footerLabel1))
                .addContainerGap())
            .addComponent(sideMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 576, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchButttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButttonActionPerformed
        try {
            String SQL;
            String dep = departmentComboBox.getSelectedItem().toString();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());

            if (startDate.getDate() == null && endDate.getDate() == null) {
                if ("All".equals(dep)) {
                    SQL = "select * from requests";
                    confirmLabel.setText("All reqeuests displayed");
                } else {
                    SQL = "select * from requests where department = '" + dep + "'";
                    confirmLabel.setText("All " + dep + " reqeuests displayed");
                }
                sqlDisplayer(SQL);

            } else if (startDate.getDate() == null && endDate.getDate() != null) {
                String eDate = sdf.format(endDate.getDate());
                if ("All".equals(dep)) {
                    SQL = "select * from requests where requestCreated < '" + eDate + "'";
                    confirmLabel.setText("All reqeuests displayed");
                } else {
                    SQL = "select * from requests where department = '" + dep + "' and requestCreated < '" + eDate + "'";
                    confirmLabel.setText("All " + dep + " reqeuests displayed ");
                }
                sqlDisplayer(SQL);

            } else if (startDate.getDate() != null && endDate.getDate() == null) {
                String sDate = sdf.format(startDate.getDate());
                if ("All".equals(dep)) {
                    SQL = "select * from requests where requestCreated > '" + sDate + "'";
                    confirmLabel.setText("All reqeuests displayed");
                } else {
                    SQL = "select * from requests where department = '" + dep + "' and requestCreated > '" + sDate + "'";
                    confirmLabel.setText("All " + dep + " reqeuests displayed ");
                }
                sqlDisplayer(SQL);

            } else {
                String sDate = sdf.format(startDate.getDate());
                String eDate = sdf.format(endDate.getDate());
                if ("All".equals(dep)) {
                    SQL = "select * from requests where requestCreated > '" + sDate + "' and requestCreated < '" + eDate + "'";
                    confirmLabel.setText("All reqeuests displayed");
                } else {
                    SQL = "select * from requests where department = '" + dep + "' and requestCreated > '" + sDate + "'and requestCreated < '" + eDate + "'";
                    confirmLabel.setText("All " + dep + " reqeuests displayed ");
                }
                sqlDisplayer(SQL);
            }

        } catch (SQLException ex) {
            Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchButttonActionPerformed

    private void stateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateButtonActionPerformed
        rquestsCounter();
        String SQL;
        if (requestTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "please select a row", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int index = requestTable.getSelectedRow();
            TableModel model = requestTable.getModel();
            String rID = model.getValueAt(index, 0).toString();
            String state = model.getValueAt(index, 9).toString();

            if ("open".equals(state)) {
                model.setValueAt("closed", index, 9);
                SQL = "UPDATE `requests` SET `state` = 'closed' WHERE `requests`.`requestID` = '" + rID + "'";
                System.out.println(SQL);
                confirmLabel.setText("Request closed");
                Statement statement;
                try {
                    statement = conn.createStatement();
                    statement.executeUpdate(SQL);
                } catch (SQLException ex) {
                    Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if ("closed".equals(state)) {
                model.setValueAt("open", index, 9);
                SQL = "UPDATE `requests` SET `state` = 'open' WHERE `requests`.`requestID` = '" + rID + "'";
                System.out.println(SQL);
                confirmLabel.setText("Request opened");
                Statement statement;
                try {
                    statement = conn.createStatement();
                    statement.executeUpdate(SQL);
                } catch (SQLException ex) {
                    Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                System.out.println("error: worng state, restart");
            }
        }
        rquestsCounter();
    }//GEN-LAST:event_stateButtonActionPerformed

    private void requestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestTableMouseClicked

        deleteButton.setEnabled(true);
        emailButton.setEnabled(true);
        stateButton.setEnabled(true);
        //-----------------------------------
        int index = requestTable.getSelectedRow();
        TableModel model = requestTable.getModel();
        String title = model.getValueAt(index, 6).toString();
        String description = model.getValueAt(index, 7).toString();
        serverTextArea.setText("Title:-\n" + title + "\n---------------------------------------------\nDescription:-\n" + description);
    }//GEN-LAST:event_requestTableMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        rquestsCounter();
        confirmLabel.setText("welcome Back!");
        //-------------------------------------------------------------------------    
        requestTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        requestTable.getColumnModel().getColumn(0).setPreferredWidth(36);
        requestTable.getColumnModel().getColumn(1).setPreferredWidth(103);
        requestTable.getColumnModel().getColumn(2).setPreferredWidth(160);
        requestTable.getColumnModel().getColumn(3).setPreferredWidth(80);
        requestTable.getColumnModel().getColumn(4).setPreferredWidth(105);
        requestTable.getColumnModel().getColumn(5).setPreferredWidth(55);
        requestTable.getColumnModel().getColumn(6).setPreferredWidth(130);
        requestTable.getColumnModel().getColumn(7).setPreferredWidth(250);
        requestTable.getColumnModel().getColumn(8).setPreferredWidth(65);
        requestTable.getColumnModel().getColumn(9).setPreferredWidth(55);
        //-------------------------------------------------------------------------

        //-------------------------------------------------------------------------
        try {
            DefaultTableModel model = (DefaultTableModel) requestTable.getModel();
            model.setRowCount(0);
            String SQL;

            SQL = "select * from requests";
            confirmLabel.setText("All reqeuests displayed");

            sqlDisplayer(SQL);

        } catch (SQLException ex) {
            Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        //-------------------------------------------------------------------------
    }//GEN-LAST:event_formWindowOpened

    private void emailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailButtonActionPerformed
        String SQL;
        if (requestTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "please select a row", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int index = requestTable.getSelectedRow();
            TableModel model = requestTable.getModel();
            String email = model.getValueAt(index, 2).toString();
            new MailApp(email).setVisible(true);
        }
    }//GEN-LAST:event_emailButtonActionPerformed

    private void searchIdButttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchIdButttonActionPerformed
        if (!"".equals(requestIdTextField.getText())) {
            try {
                String requestId = requestIdTextField.getText();
                DefaultTableModel model = (DefaultTableModel) requestTable.getModel();
                model.setRowCount(0);
                String SQL;

                SQL = "SELECT * FROM `requests` WHERE requestID = " + requestId + ";";
                sqlDisplayer(SQL);
            } catch (SQLException ex) {
                Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please enter a request ID", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_searchIdButttonActionPerformed

    private void allPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allPanelMouseClicked
        try {
            DefaultTableModel model = (DefaultTableModel) requestTable.getModel();
            model.setRowCount(0);
            String SQL;

            SQL = "select * from requests";
            confirmLabel.setText("All reqeuests displayed");

            sqlDisplayer(SQL);

        } catch (SQLException ex) {
            Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_allPanelMouseClicked

    private void openPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openPanelMouseClicked
        try {
            DefaultTableModel model = (DefaultTableModel) requestTable.getModel();
            model.setRowCount(0);
            String SQL;

            SQL = "select * from requests where state = 'open'";
            confirmLabel.setText("All open reqeuests displayed");

            sqlDisplayer(SQL);

        } catch (SQLException ex) {
            Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_openPanelMouseClicked

    private void closedPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closedPanelMouseClicked
        try {
            DefaultTableModel model = (DefaultTableModel) requestTable.getModel();
            model.setRowCount(0);
            String SQL;

            SQL = "select * from requests where state = 'closed'";
            confirmLabel.setText("All open reqeuests displayed");

            sqlDisplayer(SQL);
            if (model.getColumnCount() == -1) {
                JOptionPane.showMessageDialog(this, "Reqeust not found", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_closedPanelMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this request?\n This would completely remove it from the database.", "Warning", dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION) {
            String SQL;
            int index = requestTable.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) requestTable.getModel();
            model.removeRow(index);
            String rID = model.getValueAt(index, 0).toString();
            SQL = "DELETE FROM requests WHERE `requests`.`requestID` = " + rID;
            System.out.println(SQL);
            confirmLabel.setText("Request deleted");
            Statement statement;
            try {
                statement = conn.createStatement();
                statement.executeUpdate(SQL);
            } catch (SQLException ex) {
                Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        rquestsCounter();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void rquestsCounter() {
        //-------------------------------------------------------------------------
        int number = 0;
        String SQLAll = "SELECT COUNT(state) FROM requests";
        Statement statement;
        try {
            statement = conn.createStatement();
            ResultSet rs = statement.executeQuery(SQLAll);
            rs.next();
            number = rs.getInt(1);
        } catch (SQLException ex) {
            Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        String value = String.valueOf(number);
        allLabel.setText("(" + value + ")");
        //-------------------------------------------------------------------------

        //------------------------------------------------------------------------- 
        int number2 = 0;
        String SQLOpen = "SELECT COUNT(state) FROM requests where state = 'open';";
        try {
            statement = conn.createStatement();
            ResultSet rs = statement.executeQuery(SQLOpen);
            rs.next();
            number2 = rs.getInt(1);
        } catch (SQLException ex) {
            Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        String value2 = String.valueOf(number2);
        openLabel.setText("(" + value2 + ")");
        //-------------------------------------------------------------------------

        //-------------------------------------------------------------------------
        int number3 = 0;
        String SQLClosed = "SELECT COUNT(state) FROM requests where state = 'closed';";
        try {
            statement = conn.createStatement();
            ResultSet rs = statement.executeQuery(SQLClosed);
            rs.next();
            number3 = rs.getInt(1);
        } catch (SQLException ex) {
            Logger.getLogger(ServerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        String value3 = String.valueOf(number3);
        closedLabel.setText("(" + value3 + ")");
        //-------------------------------------------------------------------------
    }

    private void sqlDisplayer(String SQL) throws SQLException {
        System.out.println(SQL);
        DefaultTableModel model = (DefaultTableModel) requestTable.getModel();
        model.setRowCount(0);
        ResultSet rs = loginDb.getResultSet(conn, SQL);
        boolean hasNext = false;

        while (rs.next()) {
            hasNext = true;
            model.addRow(new Object[]{
                rs.getInt(1),
                rs.getString(2),
                rs.getString(3),
                rs.getString(4),
                rs.getString(5),
                rs.getString(6),
                rs.getString(7),
                rs.getString(8),
                rs.getDate(9),
                rs.getString(10)
            });
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel allLabel;
    private javax.swing.JPanel allPanel;
    private javax.swing.JLabel closedLabel;
    private javax.swing.JLabel closedLabel1;
    private javax.swing.JLabel closedLabel2;
    private javax.swing.JPanel closedPanel;
    private javax.swing.JPanel closedPanel1;
    private javax.swing.JPanel closedPanel2;
    private javax.swing.JLabel confirmLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox<String> departmentComboBox;
    private javax.swing.JButton emailButton;
    private com.toedter.calendar.JDateChooser endDate;
    private javax.swing.JLabel footerLabel;
    private javax.swing.JLabel footerLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel openLabel;
    private javax.swing.JPanel openPanel;
    private javax.swing.JTextField requestIdTextField;
    private javax.swing.JTable requestTable;
    private javax.swing.JButton searchButtton;
    private javax.swing.JButton searchIdButtton;
    private javax.swing.JTextArea serverTextArea;
    private javax.swing.JPanel sideMenuPanel;
    private com.toedter.calendar.JDateChooser startDate;
    private javax.swing.JButton stateButton;
    // End of variables declaration//GEN-END:variables
}
